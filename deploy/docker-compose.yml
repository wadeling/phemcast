services:
  frontend:
    image: ${REGISTRY}/${REPO}/frontend:latest
    platform: ${PLATFORM:-linux/amd64}
    ports:
      - "80:80"
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  backend:
    image: ${REGISTRY}/${REPO}/backend:latest
    platform: ${PLATFORM:-linux/amd64}
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - app-reports:/app/reports
      - app-logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mysql:
    image: mysql:8.0
    platform: ${PLATFORM:-linux/amd64}
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: phemcast
      MYSQL_USER: phemcast
      MYSQL_PASSWORD: phemcast
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  app-reports:
    driver: local
  app-logs:
    driver: local
  mysql_data:
    driver: local
